<<<<<<< HEAD
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(lower = F)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
library(corrplot)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', col='black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed( addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot(addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
corrplot(order="AOE', addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')])
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = 'c', booktabs=T)
}
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = align, booktabs=booktabs)
}
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
head(pacientes) %>% make_table()
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
table(pacientes$Medico, pacientes$categoria)
table(pacientes$Medico, pacientes$categoria) %>% prop.table()
%>% round(,2)
%>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
tabela_medicos <- table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
tabela_medicos %>% make_table()
chisq.test(tabela_medicos)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
base <- table(pacientes$Medico, pacientes$categoria)
base
tab <- base %>% make_table()
tab
tab
base <- table(pacientes$Medico, pacientes$categoria)
tab
base <- table(pacientes$Medico, pacientes$categoria)
base
tab %>% as.data.frame()
base <- table(pacientes$Medico, pacientes$categoria)
tab <- base
tab %>% as.data.frame()
tab %>% as.data.frame.array()
head(pacientes)
plot(pacientes$dist, pacientes$Idade)
pacientes <- pacientes %>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
pacientes$dist
pacientes$dist %>% summary()
plot(pacientes$dist, pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade) %<% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% plot()
kmeans(pacientes)
kmeans(pacientes, centers=2)
<<<<<<< HEAD
library(shiny)
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
table(pacientes$Medico)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(pacientes$Medico)))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=y), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=count(Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=..count..), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=table(pacientes$Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=-1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
mapa_medico()
pacientes %>% filter(dist > 50) %>% make_table()
pacientes <- pacientes %>% filter(dist < 50)
mapa_medico()
mapa_idade()
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=categoria)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
pdf_to_data_frame_vestibular_v1 <- function(file){
text0 <- file
text <- gsub('.nulada', '99', text0)
a = gsub(" |[A-Za-zÃ-ÈÃÃ ]|\n|.*\\)|\\*","",text)
a2 = gsub('\\/..', '', a)
pattern = regex("[0-9]{6,}")
b = str_extract_all(a2,pattern)
valores <- c()
for(i in 1:7){
for (x in b[[i]]){
if(nchar(x) == 6){
valores <- append(valores, substr(x,1,4))
} else if(nchar(x) == 8){
valores <-append(valores, substr(x,3,6))
} else{
for(i in seq(6,nchar(x), by=6)){
valores <- append(valores, substr(x,i-3,i))
}
}
}
}
pergunta <- substr(valores, 1,2)
resposta <- substr(valores, 3,4)
result <- data.frame(pergunta,resposta)
result[c(1:40),2]  %>% as.vector() %>% as.numeric() -> p1
result[c(41:50),2] %>% as.vector() %>% as.numeric() -> p2
result[c(51:55),2] %>% as.vector() %>% as.numeric() -> p3
result[c(56:60),2] %>% as.vector() %>% as.numeric() -> p4
result[c(61:65),2] %>% as.vector() %>% as.numeric() -> p5
result[c(66:70),2] %>% as.vector() %>% as.numeric() -> p6
result[c(71:90),2] %>% as.vector() %>% as.numeric() -> p7
result[c(91:110),2] %>% as.vector() %>% as.numeric() -> p8
result[c(111:130),2] %>% as.vector() %>% as.numeric() -> p9
result[c(131:150),2] %>% as.vector() %>% as.numeric() -> p10
result[c(151:170),2] %>% as.vector() %>% as.numeric() -> p11
result[c(171:190),2] %>% as.vector() %>% as.numeric() -> p12
result[c(191:210),2] %>% as.vector() %>% as.numeric() -> p13
result[c(211:230),2] %>% as.vector() %>% as.numeric() -> p14
result[c(231:250),2] %>% as.vector() %>% as.numeric() -> p15
areas_p1 <- c(rep('cg', 40), rep('pt', 10), rep('lit', 5),
rep('es', 5), rep('fr', 5), rep('en', 5))
areas_p2 <- rep(c('arte', 'bio', 'edf', 'filo', 'fis', 'geo',
'hist', 'mat', 'quim', 'sol'), each=20)
result$area <- c(areas_p1, areas_p2)
teste <- list(cg = p1,
pt = p2,
es = p3,
fr = p4,
en = p5,
arte = p6,
bio = p7,
edf = p8,
filo = p9,
fis = p10,
geo = p11,
hist = p12,
mat = p13,
quim = p14,
sol = p15)
return(teste)
}
ano <- c(2018, 2019)
versao <- c('inverno', 'verao')
for(ano in ano){
for(versao in versao){
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
filename = paste0('./vestibular/' , file, '.json')
result <- pdf_to_data_frame_vestibular_v1(txt_output)
toJSON(result, pretty = T, auto_unbox=T) %>% write(filename)
}
}
ano <- 2019
versao <- 'verao'
ano <- 2019
versao <- 'verao'
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
=======
>>>>>>> 46f0cf12fec1d06ce400ad867433bc19a9eeecbb
>>>>>>> b315f74977238b1ac6913b3cc13c2941893cac6b
knitr::opts_chunk$set(message = F, warning = F, echo=F)
library(shiny)
library(shiny)
library(knitr)
library(corrplot)
source("./01analise_functions.R")
pacientes %<>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist))
medias[order(medias[,2], decreasing = T),]
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange()
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange()
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(media)
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(media, decreasing=T)
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(medias))
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(medias))
medias
desc(medias)
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(media))
medias
medias$grupo <- c('A', 'A', 'B', 'B', 'BC', 'BC', 'C')
medias %>% make_table()
library(PMCMR)
library(FSA)
# funï¿½ao mapa medico
mapa_idade<-function(){
cof <- colorFactor(c("red", "blue", "orange","black"), domain=c("20 a 40","40 a 60","acima de 60","menor que 20"))
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(pacientes$categoria), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange"), labels=c("Menor que 40 anos","Entre 40 anos e 60 anos","Maior que 40 anos"), title="Idade")
}
mapa_idade()
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
library(readxl)
library(nortest)
library(stringr)
mapa_idade
mapa_idade()
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
fill_color <- 'royalblue'
mapa_idade()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(Medico), stroke = F, fillOpacity = 0.9)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,stroke = F, fillOpacity = 0.9)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Trend,max=100,radius=20,blur=10)
}
mapa_geral()
install.packages("leaflet.extras")
library(leaflet.extras)
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Trend,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 10) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 15) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Idade,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=30,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 13) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=50)
}
mapa_geral()
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=500,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10)
20
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10, itensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=5, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=5, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=50, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10, intensity=~Idade)
mapa_geral<-function(radius, blur){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=radius,blur=blur)
}
source("./01analise_functions.R")
library(readxl)
library(dplyr)
library(stringr)
##### reading the data #####
data <- read_xlsx('./data/Dados abelhas.xlsx', sheet = 1)
# renaming columns
names(data) <- c(
'meses', 'colonias', 'comp_canudo', 'diam_canudo',
'n_potes_mel', 'n_discos', 'tam_discos', 'peso', 'est_pop'
)
# converting months
data$meses <- month.abb[data$meses]
###############################
write.table(data, './data/data.csv', sep=',')
View(data)
teste_normal <- function(var){
shapiro <- shapiro.test(var)
ad <- ad.test(var)
cvm <- cvm.test(var)
lillie <- lillie.test(var)
rbind(shapiro,ad,cvm, lillie) %>% as.data.frame(row.names = F) %>%
select(-c(statistic, data.name)) %>%
relocate(method) %>%
mutate(method = str_replace_all(method, 'normality test', '')) %>%
mutate(decis?o = ifelse(p.value > 0.05, 'N?o rejeita H0', 'Rejeita H0')) %>%
return()
}
View(data)
=======
\newpage
# Exercício 5.4
\rule{\textwidth}{0.4pt}
install.packages("qcc")
depth <- rep(c(0.15,0.18,0.20,0.25), times=9)
depth
rate <- rep(c(0.20,0.25,0.30), each=4)
rate <- rep(c(0.20,0.25,0.30), each=9)
rate
depth <- rep(c(0.15,0.18,0.20,0.25), each=9)
depth
rate <- rep(c(0.20,0.25,0.30), each=9)
rate
rate <- rep(c(0.20,0.25,0.30), times=9)
rate
surface <- read.delim('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface <- read.delim('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface <- readLines('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface <- read.table('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface <- scan('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
scan('74 79 82 99)
e
a
'a'
scan('74 79 82 99')
surface <- read.ftable('74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface <- scan(text='74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
surface
library(qcc)
pareto.chart(surface, ylab = "Efeitos",
col=heat.colors(length(surface)))
data.frame(depth, rate, surface)
depth <- rep(c(0.15,0.18,0.20,0.25), each=9)
depth <- as.factor(depth)
rate <- rep(c(0.20,0.25,0.30), times=9)
rate <- as.factor(rate)
surface <- scan(text='74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
data.frame(depth, rate, surface)
surface
rate
depth <- rep(c(0.15,0.18,0.20,0.25), each=9)
depth <- as.factor(depth)
rate <- rep(c(0.20,0.25,0.30), each=12)
rate <- as.factor(rate)
depth
depth <- rep(c(0.15,0.18,0.20,0.25), times=9)
depth <- as.factor(depth)
rate <- rep(c(0.20,0.25,0.30), each=12)
rate <- as.factor(rate)
surface <- scan(text='74 79 82 99
64 68 88 104
60 73 92 96
92 98 99 104
86 104 108 110
88 88 95 99
99 104 108 114
98 99 110 111
102 95 99 107')
data.frame(depth, rate, surface)
dados_ex54 <- data.frame(depth, rate, surface)
dados_ex54 %>% ggplot(aes(x=as.factor(data[,1]), y = data[,2])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= data[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
library(agricolae)
library(agricolae)
library(gmodels)
library(emmeans)
library(DescTools)
library(ggplot2)
library(emmeans)
library(DescTools)
library(ggplot2)
library(dplyr)
library(patchwork)
dados_ex54 %>% ggplot(aes(x=as.factor(data[,1]), y = data[,2])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= data[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(data[,1]), y = data[,2])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= data[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(data[,1]), y = data[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= data[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
data[,2]
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,1]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,2], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= data[,2], group=1), col='red', lwd=0.8)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,2], group=1), col='red', lwd=0.8)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,2], group=3), col='red', lwd=0.8)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,3], group=1), col='red', lwd=0.8)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,3], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(y= dados_ex54[,3], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(x =dados_ex54[,1], y= dados_ex54[,3], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
dados_ex54 %>% ggplot(aes(x=as.factor(dados_ex54[,2]), y = dados_ex54[,3])) + geom_jitter(width = 0.1) +
ggtitle('Gráfico de dispersão') +
stat_summary(fun=mean, geom='line', aes(x =dados_ex54[,1], y= dados_ex54[,3], group=1), col='red', lwd=0.8) +
stat_summary(fun=mean, geom='point', col='blue', size=3)
with(dados_ex54[dados_ex54$depth=='0.20', ],
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface,main='C=200',
xlab = "A - carbonatação")
)
with(dados_ex54[dados_ex54$depth=='0.20', ],
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface,main='C=200',
xlab = "A - carbonatação")
)
with(dados_ex54,
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface,main='C=200',
xlab = "A - carbonatação")
)
with(dados_ex54,
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface,main='a',
xlab = "A - carbonatação")
)
with(dados_ex54,
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface,main='a',
xlab = "depth")
)
dados_ex54 %>%
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface, xlab = "depth")
dados_ex54 %>%
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface, xlab = "depth")
interaction.plot
?interaction.plot
with(dados_ex54,
interaction.plot(x.factor = depth, trace.factor = rate,
response = surface, xlab = "depth")
)
fit5.4<- aov( surface ~ depth * rate , data=dados_ex54)
summary(fit5.4)
anova(fit5.4)
summary(fit5.4)
anova(fit5.4)
tb <- anova(fit5.4)
tb <- anova(fit5.4)
tb[1:7 ,2]
tb
tb <- anova(fit5.4)
(R2<- sum(tb[1:4 ,2])/sum(tb[,2]) )
tb[1:5 ,2]
(R2<- sum(tb[1:3 ,2])/sum(tb[,2]) )
cont<- (tb[ 1:3 ,2]/ sum(tb[,2]) )*100 # contribuição para SQ_total
names(cont)<- row.names(tb)[1:3]
cont
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
text(x = pl$x, pl$y+4, labels =row.names(tb)[1:3] )
library(qcc)
pareto.chart(cont, ylab = "% de contribuição para SQ",
col=heat.colors(length(cont)))
cont
dados_ex54 %>% group_by(depth, rate) %>%
summarise(media=mean)
dados_ex54 %>% group_by(depth, rate) %>%
summarise(media=mean(surface))
dados_ex54 %>% group_by(rate) %>%
summarise(media=mean(surface))
cycle <- rep(c(40,50,60), each=18)
cycle
temperature <- rep(c(300,350), each=3)
temperature
temperature <- rep(
rep(c(300,350), each=3),
times=9
)
temperature
operator <- rep(
rep(1:3, times=2),
times=9
)
operator
y <- scan(text='23 27 31 24 38 34
24 28 32 23 36 36
25 26 29 28 35 39
36 34 33 37 34 34
35 38 34 39 38 36
36 39 35 35 36 31
28 35 26 26 36 28
24 35 27 29 37 26
27 34 25 25 34 24')
dados_ex519 <- data.frame(cycle, temperature, operator, y)
dados_ex519
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- matrix(dados_ex531, nrow=5)
dados_ex531
dados_ex531 <- matrix(dados_ex531, nrow=5, byrow = T)
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- matrix(dados_ex531, nrow=5, byrow = T)
dados_ex531
dados_ex531 <- dados_ex531 %>%
matrix(nrow=5, byrow = T) %>%
as.data.frame()
dados_ex531
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- dados_ex531 %>%
matrix(nrow=5, byrow = T) %>%
as.data.frame()
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 %>%
matrix(nrow=5, byrow = T)
dados_ex531 <- dados_ex531 %>%
matrix(ncol=5, byrow = T) %>%
as.data.frame()
dados_ex531
names(dados_ex531) <- c('ammonium', 'rate',
'temperature', 'density','area')
anova(fit5.4)
fit5.4$residuals
fit5.4$residuals %>% plot()
fit5.4$df.residuals %>% plot()
fit5.4$df.residual %>% plot()
>>>>>>> 90d0d62c15c2a9c2fa62098a04732d1ecb7d1444
