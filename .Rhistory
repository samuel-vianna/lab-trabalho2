<<<<<<< HEAD
head(pacientes) %>% make_table()
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
table(pacientes$Medico, pacientes$categoria)
table(pacientes$Medico, pacientes$categoria) %>% prop.table()
%>% round(,2)
%>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
tabela_medicos <- table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
tabela_medicos %>% make_table()
chisq.test(tabela_medicos)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
base <- table(pacientes$Medico, pacientes$categoria)
base
tab <- base %>% make_table()
tab
tab
base <- table(pacientes$Medico, pacientes$categoria)
tab
base <- table(pacientes$Medico, pacientes$categoria)
base
tab %>% as.data.frame()
base <- table(pacientes$Medico, pacientes$categoria)
tab <- base
tab %>% as.data.frame()
tab %>% as.data.frame.array()
head(pacientes)
plot(pacientes$dist, pacientes$Idade)
pacientes <- pacientes %>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
pacientes$dist
pacientes$dist %>% summary()
plot(pacientes$dist, pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade) %<% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% plot()
kmeans(pacientes)
kmeans(pacientes, centers=2)
<<<<<<< HEAD
library(shiny)
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
table(pacientes$Medico)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(pacientes$Medico)))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=y), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=count(Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=..count..), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=table(pacientes$Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=-1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
mapa_medico()
pacientes %>% filter(dist > 50) %>% make_table()
pacientes <- pacientes %>% filter(dist < 50)
mapa_medico()
mapa_idade()
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=categoria)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
pdf_to_data_frame_vestibular_v1 <- function(file){
text0 <- file
text <- gsub('.nulada', '99', text0)
a = gsub(" |[A-Za-zÃ-ÈÃÃ ]|\n|.*\\)|\\*","",text)
a2 = gsub('\\/..', '', a)
pattern = regex("[0-9]{6,}")
b = str_extract_all(a2,pattern)
valores <- c()
for(i in 1:7){
for (x in b[[i]]){
if(nchar(x) == 6){
valores <- append(valores, substr(x,1,4))
} else if(nchar(x) == 8){
valores <-append(valores, substr(x,3,6))
} else{
for(i in seq(6,nchar(x), by=6)){
valores <- append(valores, substr(x,i-3,i))
}
}
}
}
pergunta <- substr(valores, 1,2)
resposta <- substr(valores, 3,4)
result <- data.frame(pergunta,resposta)
result[c(1:40),2]  %>% as.vector() %>% as.numeric() -> p1
result[c(41:50),2] %>% as.vector() %>% as.numeric() -> p2
result[c(51:55),2] %>% as.vector() %>% as.numeric() -> p3
result[c(56:60),2] %>% as.vector() %>% as.numeric() -> p4
result[c(61:65),2] %>% as.vector() %>% as.numeric() -> p5
result[c(66:70),2] %>% as.vector() %>% as.numeric() -> p6
result[c(71:90),2] %>% as.vector() %>% as.numeric() -> p7
result[c(91:110),2] %>% as.vector() %>% as.numeric() -> p8
result[c(111:130),2] %>% as.vector() %>% as.numeric() -> p9
result[c(131:150),2] %>% as.vector() %>% as.numeric() -> p10
result[c(151:170),2] %>% as.vector() %>% as.numeric() -> p11
result[c(171:190),2] %>% as.vector() %>% as.numeric() -> p12
result[c(191:210),2] %>% as.vector() %>% as.numeric() -> p13
result[c(211:230),2] %>% as.vector() %>% as.numeric() -> p14
result[c(231:250),2] %>% as.vector() %>% as.numeric() -> p15
areas_p1 <- c(rep('cg', 40), rep('pt', 10), rep('lit', 5),
rep('es', 5), rep('fr', 5), rep('en', 5))
areas_p2 <- rep(c('arte', 'bio', 'edf', 'filo', 'fis', 'geo',
'hist', 'mat', 'quim', 'sol'), each=20)
result$area <- c(areas_p1, areas_p2)
teste <- list(cg = p1,
pt = p2,
es = p3,
fr = p4,
en = p5,
arte = p6,
bio = p7,
edf = p8,
filo = p9,
fis = p10,
geo = p11,
hist = p12,
mat = p13,
quim = p14,
sol = p15)
return(teste)
}
ano <- c(2018, 2019)
versao <- c('inverno', 'verao')
for(ano in ano){
for(versao in versao){
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
filename = paste0('./vestibular/' , file, '.json')
result <- pdf_to_data_frame_vestibular_v1(txt_output)
toJSON(result, pretty = T, auto_unbox=T) %>% write(filename)
}
}
ano <- 2019
versao <- 'verao'
ano <- 2019
versao <- 'verao'
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
=======
>>>>>>> 46f0cf12fec1d06ce400ad867433bc19a9eeecbb
>>>>>>> b315f74977238b1ac6913b3cc13c2941893cac6b
knitr::opts_chunk$set(message = F, warning = F, echo=F)
library(shiny)
=======
anova(fit5.4)
tb <- anova(fit5.4)
tb <- anova(fit5.4)
tb[1:7 ,2]
tb
tb <- anova(fit5.4)
(R2<- sum(tb[1:4 ,2])/sum(tb[,2]) )
tb[1:5 ,2]
(R2<- sum(tb[1:3 ,2])/sum(tb[,2]) )
cont<- (tb[ 1:3 ,2]/ sum(tb[,2]) )*100 # contribuição para SQ_total
names(cont)<- row.names(tb)[1:3]
cont
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
text(x = pl$x, pl$y+4, labels =row.names(tb)[1:3] )
library(qcc)
pareto.chart(cont, ylab = "% de contribuição para SQ",
col=heat.colors(length(cont)))
cont
dados_ex54 %>% group_by(depth, rate) %>%
summarise(media=mean)
dados_ex54 %>% group_by(depth, rate) %>%
summarise(media=mean(surface))
dados_ex54 %>% group_by(rate) %>%
summarise(media=mean(surface))
cycle <- rep(c(40,50,60), each=18)
cycle
temperature <- rep(c(300,350), each=3)
temperature
temperature <- rep(
rep(c(300,350), each=3),
times=9
)
temperature
operator <- rep(
rep(1:3, times=2),
times=9
)
operator
y <- scan(text='23 27 31 24 38 34
24 28 32 23 36 36
25 26 29 28 35 39
36 34 33 37 34 34
35 38 34 39 38 36
36 39 35 35 36 31
28 35 26 26 36 28
24 35 27 29 37 26
27 34 25 25 34 24')
dados_ex519 <- data.frame(cycle, temperature, operator, y)
dados_ex519
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- matrix(dados_ex531, nrow=5)
dados_ex531
dados_ex531 <- matrix(dados_ex531, nrow=5, byrow = T)
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- matrix(dados_ex531, nrow=5, byrow = T)
dados_ex531
dados_ex531 <- dados_ex531 %>%
matrix(nrow=5, byrow = T) %>%
as.data.frame()
dados_ex531
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 <- dados_ex531 %>%
matrix(nrow=5, byrow = T) %>%
as.data.frame()
dados_ex531 <- scan(text='2 100 8 14.68 0.40
2 100 8 15.18 0.43
30 100 8 15.12 0.42
30 100 8 17.48 0.41
2 150 8 7.54 0.69
2 150 8 6.66 0.67
30 150 8 12.46 0.52
30 150 8 12.62 0.36
2 100 40 10.95 0.58
2 100 40 17.68 0.43
30 100 40 12.65 0.57
30 100 40 15.96 0.54
2 150 40 8.03 0.68
2 150 40 8.84 0.75
30 150 40 14.96 0.41
30 150 40 14.96 0.41')
dados_ex531 %>%
matrix(nrow=5, byrow = T)
dados_ex531 <- dados_ex531 %>%
matrix(ncol=5, byrow = T) %>%
as.data.frame()
dados_ex531
names(dados_ex531) <- c('ammonium', 'rate',
'temperature', 'density','area')
anova(fit5.4)
fit5.4$residuals
fit5.4$residuals %>% plot()
fit5.4$df.residuals %>% plot()
fit5.4$df.residual %>% plot()
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = c())
ggplotly(a, tooltip = c("x","y","group"))
}
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = c('Mar'))
ggplotly(a, tooltip = c("x","y","group"))
}
>>>>>>> 867eff9d4492a168e3d74c5ca0a1d229d6f76b13
library(shiny)
library(knitr)
library(tidyverse)
library(tidyverse)
library(corrplot)
library(plotly)
library(leaflet)
source('./00manipulando_dados.R')
source("./01analise_functions.R")
<<<<<<< HEAD
git branch
=======
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = c('Mar'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = c('Mar'))
# ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = 3)
# ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
levels(colonias$meses)
levels(datas$meses)
levels(data$meses)
which(levels(data$meses) %in% c('Mar', 'Sep', 'Dec'))
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Sep', 'Dec')))
# ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
ggplot(data,aes(x=meses, y=n_potes_mel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Sep', 'Dec')))
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Sep', 'Dec')))
# ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')))
# ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')))
ggplotly(a, tooltip = c("x","y","group"))
}
col<-function(var){
data %>% ggplot(aes(x=colonias, y=var)) + geom_bar(stat='identity', fill=fill_color) +
coord_flip() +
theme_minimal() +
geom_text(
aes(label = stat(y)),
stat = 'summary', fun = sum, hjust = -0.5
)
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.5)
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_label(aes(x=c(3,6,9,12), y=100, label='teste'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_label(aes(x=c(3), y=100, label='teste'))
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_label(aes(x=3, y=100, label='teste'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_label(aes(x=3, y=100, label='teste'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
annotate(x=3, y=100, label='teste')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3, y=100, label='teste'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3, y=100, label='teste', angle=90, vjust=-.5))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3, y=100, label='teste'), angle=90, vjust=-.5, col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3, y=100, label='teste'), angle=90,  col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3-0.15, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.15, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.15, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.15, y=100, label='Verão'), angle=90,col='black') +
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')), size=1.2) +
geom_text(aes(x=3-0.15, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.15, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.15, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.15, y=100, label='Verão'), angle=90,col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1.2, alpha=0.5
) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=90,col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1.2, alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=90,col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=90,col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=90, hjust=0, col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=30, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=45, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=00, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=00, hjust=0, col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=100, label='Outono'), angle=90, col='black') +
geom_text(aes(x=6-0.5, y=100, label='Inverno'), angle=90, col='black') +
geom_text(aes(x=9-0.5, y=100, label='Primavera'), angle=90, col='black') +
geom_text(aes(x=12-0.5, y=100, label='Verão'), angle=90, hjust=-1, col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
max(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=1,col='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1, col='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1, col='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1, col='black')
ggplotly(a, tooltip = c("x","y","group"))
}
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel, label='Outono'), angle=90, hjust=1,col='black')) +
geom_text(aes(x=6-0.5, y=max(variavel, label='Inverno'), angle=90, hjust=1, col='black')) +
geom_text(aes(x=9-0.5, y=max(variavel, label='Primavera'), angle=90, hjust=1, col='black')) +
geom_text(aes(x=12-0.5, y=max(variavel, label='Verão'), angle=90, hjust=1, col='black'))
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=1,colour='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1, colour='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1, colour='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1, colour='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=1.5,colour='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1.5, colour='black')
ggplotly(a, tooltip = c("x","y","group"))
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=1.5,colour='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1.5, colour='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=1.5,colour='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1.5, colour='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
#grafico ggplotly#####
graf_linha<-function(variavel){
a <-ggplot(data,aes(x=meses, y=variavel,col=colonias, group=colonias)) +
geom_line() + theme(legend.position = 'bottom') + theme_minimal() +
geom_vline(xintercept = which(levels(data$meses) %in% c('Mar', 'Jun','Sep', 'Dec')),
size=1, col='gray', alpha=0.5 ) +
geom_text(aes(x=3-0.5, y=max(variavel), label='Outono'), angle=90, hjust=3,colour='black') +
geom_text(aes(x=6-0.5, y=max(variavel), label='Inverno'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=9-0.5, y=max(variavel), label='Primavera'), angle=90, hjust=1.5, colour='black') +
geom_text(aes(x=12-0.5, y=max(variavel), label='Verão'), angle=90, hjust=1.5, colour='black')
ggplotly(a, tooltip = c("x","y","group"))
}
graf_linha(data$n_potes_mel)
>>>>>>> 867eff9d4492a168e3d74c5ca0a1d229d6f76b13
