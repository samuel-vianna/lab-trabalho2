cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(lower = F)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot::corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
library(corrplot)
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot()
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', col='black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed(order='AOE', addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot.mixed( addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>% corrplot(addCoef.col = 'black')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
corrplot(order="AOE', addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')]) %>%
corrplot(order="AOE", addCoef.col = 'black', tl.pos = 'd', cl.pos = 'n')
cor(pacientes[,c('Idade', 'dist')])
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = 'c', booktabs=T)
}
# função para fazer tabelas
make_table <- function(table, align='c', booktabs=T){
kable(table, align = align, booktabs=booktabs)
}
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
head(pacientes) %>% make_table()
cor(pacientes[,c('Idade', 'dist')]) %>% make_table()
table(pacientes$Medico, pacientes$categoria)
table(pacientes$Medico, pacientes$categoria) %>% prop.table()
%>% round(,2)
%>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(2)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table() %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
tabela_medicos <- table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3)
tabela_medicos %>% make_table()
chisq.test(tabela_medicos)
table(pacientes$Medico, pacientes$categoria) %>%
prop.table(margin = 1) %>% round(3) %>% make_table()
base <- table(pacientes$Medico, pacientes$categoria)
base
tab <- base %>% make_table()
tab
tab
base <- table(pacientes$Medico, pacientes$categoria)
tab
base <- table(pacientes$Medico, pacientes$categoria)
base
tab %>% as.data.frame()
base <- table(pacientes$Medico, pacientes$categoria)
tab <- base
tab %>% as.data.frame()
tab %>% as.data.frame.array()
head(pacientes)
plot(pacientes$dist, pacientes$Idade)
pacientes <- pacientes %>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
pacientes$dist
pacientes$dist %>% summary()
plot(pacientes$dist, pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade)
lm(pacientes$dist ~ pacientes$Idade) %<% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% summary()
lm(pacientes$dist ~ pacientes$Idade) %>% plot()
kmeans(pacientes)
kmeans(pacientes, centers=2)
<<<<<<< HEAD
library(shiny)
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
library(shiny)
library(knitr)
library(corrplot)
knitr::opts_chunk$set(message = F, warning = F, echo=F)
source("./01analise_functions.R")
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal()
table(pacientes$Medico)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(pacientes$Medico)))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
geom_text(aes(y=table(Medico)), data = table(pacientes$Medico))
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=y), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=count(Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=..count..), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=table(pacientes$Medico)), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=Medico, label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0)
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=Medico), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=0, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=-1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1, stat = 'count')
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=Medico)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
mapa_medico()
pacientes %>% filter(dist > 50) %>% make_table()
pacientes <- pacientes %>% filter(dist < 50)
mapa_medico()
mapa_idade()
# frequência de atendimento por médicos
pacientes %>%
ggplot(aes(x=categoria)) + geom_bar(fill=fill_color) + theme_minimal() +
geom_text(aes(y=..count.., label=..count..), vjust=1.5, stat = 'count')
pdf_to_data_frame_vestibular_v1 <- function(file){
text0 <- file
text <- gsub('.nulada', '99', text0)
a = gsub(" |[A-Za-zÃ-ÈÃÃ ]|\n|.*\\)|\\*","",text)
a2 = gsub('\\/..', '', a)
pattern = regex("[0-9]{6,}")
b = str_extract_all(a2,pattern)
valores <- c()
for(i in 1:7){
for (x in b[[i]]){
if(nchar(x) == 6){
valores <- append(valores, substr(x,1,4))
} else if(nchar(x) == 8){
valores <-append(valores, substr(x,3,6))
} else{
for(i in seq(6,nchar(x), by=6)){
valores <- append(valores, substr(x,i-3,i))
}
}
}
}
pergunta <- substr(valores, 1,2)
resposta <- substr(valores, 3,4)
result <- data.frame(pergunta,resposta)
result[c(1:40),2]  %>% as.vector() %>% as.numeric() -> p1
result[c(41:50),2] %>% as.vector() %>% as.numeric() -> p2
result[c(51:55),2] %>% as.vector() %>% as.numeric() -> p3
result[c(56:60),2] %>% as.vector() %>% as.numeric() -> p4
result[c(61:65),2] %>% as.vector() %>% as.numeric() -> p5
result[c(66:70),2] %>% as.vector() %>% as.numeric() -> p6
result[c(71:90),2] %>% as.vector() %>% as.numeric() -> p7
result[c(91:110),2] %>% as.vector() %>% as.numeric() -> p8
result[c(111:130),2] %>% as.vector() %>% as.numeric() -> p9
result[c(131:150),2] %>% as.vector() %>% as.numeric() -> p10
result[c(151:170),2] %>% as.vector() %>% as.numeric() -> p11
result[c(171:190),2] %>% as.vector() %>% as.numeric() -> p12
result[c(191:210),2] %>% as.vector() %>% as.numeric() -> p13
result[c(211:230),2] %>% as.vector() %>% as.numeric() -> p14
result[c(231:250),2] %>% as.vector() %>% as.numeric() -> p15
areas_p1 <- c(rep('cg', 40), rep('pt', 10), rep('lit', 5),
rep('es', 5), rep('fr', 5), rep('en', 5))
areas_p2 <- rep(c('arte', 'bio', 'edf', 'filo', 'fis', 'geo',
'hist', 'mat', 'quim', 'sol'), each=20)
result$area <- c(areas_p1, areas_p2)
teste <- list(cg = p1,
pt = p2,
es = p3,
fr = p4,
en = p5,
arte = p6,
bio = p7,
edf = p8,
filo = p9,
fis = p10,
geo = p11,
hist = p12,
mat = p13,
quim = p14,
sol = p15)
return(teste)
}
ano <- c(2018, 2019)
versao <- c('inverno', 'verao')
for(ano in ano){
for(versao in versao){
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
filename = paste0('./vestibular/' , file, '.json')
result <- pdf_to_data_frame_vestibular_v1(txt_output)
toJSON(result, pretty = T, auto_unbox=T) %>% write(filename)
}
}
ano <- 2019
versao <- 'verao'
ano <- 2019
versao <- 'verao'
file <- paste0('vestibular_', ano, '_', versao)
pdf_path <- paste0('./pdf/vestibular/', file ,'.pdf')
txt_output <- pdftools::pdf_text(pdf_path)
=======
>>>>>>> 46f0cf12fec1d06ce400ad867433bc19a9eeecbb
>>>>>>> b315f74977238b1ac6913b3cc13c2941893cac6b
knitr::opts_chunk$set(message = F, warning = F, echo=F)
library(shiny)
library(shiny)
library(knitr)
library(corrplot)
source("./01analise_functions.R")
pacientes %<>% filter(dist < 50)
pacientes <- pacientes %>% filter(dist < 50)
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist))
medias[order(medias[,2], decreasing = T),]
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange()
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange()
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(media)
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(media, decreasing=T)
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(medias))
medias
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(medias))
medias
desc(medias)
medias <- pacientes %>% group_by(Medico) %>%
summarise(media=mean(dist)) %>% arrange(desc(media))
medias
medias$grupo <- c('A', 'A', 'B', 'B', 'BC', 'BC', 'C')
medias %>% make_table()
library(PMCMR)
library(FSA)
# funï¿½ao mapa medico
mapa_idade<-function(){
cof <- colorFactor(c("red", "blue", "orange","black"), domain=c("20 a 40","40 a 60","acima de 60","menor que 20"))
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(pacientes$categoria), stroke = F, fillOpacity = 0.9)  %>%
addLegend("bottomright", colors= c("red", "blue", "orange"), labels=c("Menor que 40 anos","Entre 40 anos e 60 anos","Maior que 40 anos"), title="Idade")
}
mapa_idade()
library(ggplot2)
library(gridExtra)
library(dplyr)
library(leaflet)
library(corrplot)
library(leaflet)
library(readxl)
library(nortest)
library(stringr)
mapa_idade
mapa_idade()
pacientes <- read.table('./data/pacientes.csv', sep=',', h=T)
medicos <- read_xlsx('./data/dados_raw.xlsx', sheet = 2)
fill_color <- 'royalblue'
mapa_idade()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,
color=~cof(Medico), stroke = F, fillOpacity = 0.9)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addCircleMarkers(~Longitude, ~Latitude, weight = 3, radius=4,stroke = F, fillOpacity = 0.9)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Trend,max=100,radius=20,blur=10)
}
mapa_geral()
install.packages("leaflet.extras")
library(leaflet.extras)
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Trend,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 7) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 10) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 15) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,intensity=~Idade,max=100,radius=20,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=30,blur=10)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 13) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=15)
}
mapa_geral()
# funï¿½ao mapa medico
mapa_geral<-function(){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=50)
}
mapa_geral()
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=500,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10)
20
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10, itensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=20,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=5, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=5, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=50, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=10,blur=10, intensity=~Idade)
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=5,blur=10, intensity=~Idade)
mapa_geral<-function(radius, blur){
leaflet(pacientes)  %>%
addProviderTiles("Esri") %>%
setView(-51.931180, -23.415453, zoom = 12) %>%
addHeatmap(lng=~Longitude,lat=~Latitude,max=100,radius=radius,blur=blur)
}
source("./01analise_functions.R")
library(readxl)
library(dplyr)
library(stringr)
##### reading the data #####
data <- read_xlsx('./data/Dados abelhas.xlsx', sheet = 1)
# renaming columns
names(data) <- c(
'meses', 'colonias', 'comp_canudo', 'diam_canudo',
'n_potes_mel', 'n_discos', 'tam_discos', 'peso', 'est_pop'
)
# converting months
data$meses <- month.abb[data$meses]
###############################
write.table(data, './data/data.csv', sep=',')
View(data)
teste_normal <- function(var){
shapiro <- shapiro.test(var)
ad <- ad.test(var)
cvm <- cvm.test(var)
lillie <- lillie.test(var)
rbind(shapiro,ad,cvm, lillie) %>% as.data.frame(row.names = F) %>%
select(-c(statistic, data.name)) %>%
relocate(method) %>%
mutate(method = str_replace_all(method, 'normality test', '')) %>%
mutate(decis?o = ifelse(p.value > 0.05, 'N?o rejeita H0', 'Rejeita H0')) %>%
return()
}
View(data)
