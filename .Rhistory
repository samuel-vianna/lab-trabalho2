with(interaction.plot(x.factor = cycle, trace.factor = operator,
response = y, xlab = "cycle", main='Temperatura = 300')
)
dados_ex519 %>% filter(temperature == '350') %>%
with(interaction.plot(x.factor = cycle, trace.factor = operator,
response = y, xlab = "cycle", main='Temperatura = 350')
)
fit5.19<- aov( y ~ temperature * operator * cycle , data=dados_ex519)
anova(fit5.19)
tb <- anova(fit5.19)
(R2<- sum(tb[1:7 ,2])/sum(tb[,2]) )
cont<- (tb[ 1:7 ,2]/  sum(tb[,2])  )*100  # contribuição para SQ_total
names(cont)<- row.names(tb)[1:7]
library(qcc)
pareto.chart(cont, ylab = "Efeitos",
col=heat.colors(length(cont)))
pl<-qqnorm(cont, ylim = c(-2, 100))
qqline(cont)
text(x = pl$x, pl$y+4, labels =row.names(tb)[1:7]  )
par(mfrow=c(1,2))
plot(yhat0, y, xlab='valores ajustados',
ylab = 'valores observados')
abline(a = 0, b = 1)
plot(yhat0, res0, ylim = c(-3,3), xlab='valores ajustados',
ylab = 'Res. padronizados')
abline( h= c(-2,0,2),  col=c(2,1,2),  lty='dashed')
par(mfrow=c(1,2))
qqnorm(res0); qqline(res0)
hnp(lm_5.4, halfnormal = F, pch=19)
res0 <- rstandard(lm_5.19)
yhat0<- fitted(lm_5.19)
par(mfrow=c(1,2))
plot(yhat0, y, xlab='valores ajustados',
ylab = 'valores observados')
abline(a = 0, b = 1)
plot(yhat0, res0, ylim = c(-3,3), xlab='valores ajustados',
ylab = 'Res. padronizados')
abline( h= c(-2,0,2),  col=c(2,1,2),  lty='dashed')
par(mfrow=c(1,2))
qqnorm(res0); qqline(res0)
hnp(lm_5.4, halfnormal = F, pch=19)
par(mfrow=c(1,2))
plot(yhat0, y, xlab='valores ajustados',
ylab = 'valores observados')
abline(a = 0, b = 1)
plot(yhat0, res0, ylim = c(-3,3), xlab='valores ajustados',
ylab = 'Res. padronizados')
abline( h= c(-2,0,2),  col=c(2,1,2),  lty='dashed')
################
# Library
library(fmsb)
# Create data: note in High school for several students
set.seed(99)
data <- as.data.frame(matrix( sample( 0:20 , 15 , replace=F) , ncol=5))
colnames(data) <- c("math" , "english" , "biology" , "music" , "R-coding" )
rownames(data) <- paste("mister" , letters[1:3] , sep="-")
# To use the fmsb package, I have to add 2 lines to the dataframe: the max and min of each variable to show on the plot!
data <- rbind(rep(20,5) , rep(0,5) , data)
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9), rgb(0.8,0.2,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4), rgb(0.8,0.2,0.5,0.4) , rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
data
set.seed(99)
data <- as.data.frame(matrix( sample( 0:20 , 10 , replace=F) , ncol=5))
colnames(data) <- c("math" , "english" , "biology" , "music" , "R-coding" )
rownames(data) <- paste("mister" , letters[1:2] , sep="-")
# To use the fmsb package, I have to add 2 lines to the dataframe: the max and min of each variable to show on the plot!
data <- rbind(rep(20,5) , rep(0,5) , data)
# Color vector
colors_border=c( rgb(0.2,0.5,0.5,0.9) , rgb(0.7,0.5,0.1,0.9) )
colors_in=c( rgb(0.2,0.5,0.5,0.4),  rgb(0.7,0.5,0.1,0.4) )
# plot with default options:
radarchart( data  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
# Add a legend
legend(x=0.7, y=1, legend = rownames(data[-c(1,2),]), bty = "n", pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
library(readxl)
library(dplyr)
library(stringr)
##### reading the data #####
data <- read_xlsx('./data/Dados abelhas.xlsx', sheet = 1)
# renaming columns
names(data) <- c(
'meses', 'colonias', 'comp_canudo', 'diam_canudo',
'n_potes_mel', 'n_discos', 'tam_discos', 'peso', 'est_pop'
)
data$meses <- factor(month.abb[data$meses], levels = month.abb)
data$colonias <- factor(data$colonias, levels = paste('COL', c(1:13, 15:17)))
data$estacao<-case_when(
data$meses %in% month.abb[1:3] ~ 'Verao' ,
data$meses %in% month.abb[4:6] ~ 'Outono' ,
data$meses %in% month.abb[7:9] ~ 'Inverno' ,
TRUE ~ 'Primavera'
)
data$peso_100_abelhas <- (data$peso / (data$est_pop / 100))
summary(data$est_pop / 1000)
###############################
write.table(data, './data/data.csv', sep=',')
range(data[,4:8])
sapply(data[,4:8], range)
head(data)
sapply(data[,3:9], range)
sapply(data[,3:9], mean)
sapply(data[,3:9], var)
sapply(data[,3:9], function(x) sd(x)/mean(x))
sapply(data[,3:9], function(x) mean(x))
sapply(data[,3:9], function(x) sd(x)/mean(x))
sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))
sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x))))
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x))))
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot
colors_border
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
radar_plot
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9],mean)) %>%
as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9],median)) %>%
as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot
radar_plot <- sapply(data[,3:9], function(x) c(0,1)) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
radar_plot
radar_plot
sapply(radar_plot, function(x), x[1] - x[2])
sapply(radar_plot, function(x) x[1] - x[2])
normalizar <- function(val, min, max) (value - min) / (max - min)
radar_plot <- sapply(data[,3:9], function(x) c(0,1)) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
sapply(radar_plot, normalizar(x[3], x[1], x[2]))
normalizar <- function(val, min, max) (value - min) / (max - min)
sapply(radar_plot, normalizar(x[3], x[1], x[2]))
normalizar <- function(val, min, max) (val - min) / (max - min)
sapply(radar_plot, normalizar(x[3], x[1], x[2]))
sapply(radar_plot, function(x) normalizar(x[3], x[1], x[2]))
normalizar <- function(val, min, max) (val - min) / (max - min)
radar_plot <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
sapply(radar_plot, function(x) normalizar(x[3], x[1], x[2]))
normalizar <- function(val, min, max) (val - min) / (max - min)
sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
normalizar_medias <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
data$colonias
data %>%
filter(colonias == 'COL 1') %>%
select(3:9)
data %>%
filter(colonias == 'COL 1') %>%
select(3:9) %>%
sapply(., mean)
data %>%
filter(colonias == 'COL 1') %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
media_colmeia <- data %>%
filter(colonias == 'COL 1') %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
media_geral <- sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
media_colonia <- data %>%
filter(colonias == 'COL 1') %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia)
radar_plot
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia) %>% t()
radar_plot
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia) %>% t() %>% as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,20,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = rownames(radar_plot[-c(1,2),]), bty = "n",
pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
legend(x=0.7, y=1, legend = c('geral, colônia'), bty = "n",
pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = c('geral, colônia'), bty = "n",
pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = c('geral, colônia'), bty = "n",
pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=0.7, y=1, legend = c('geral', 'colônia'), bty = "n",
pch=20 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=1, y=2, legend = c('geral', 'colônia'), bty = "n",
pch=15 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=1, y=1.3, legend = c('geral', 'colônia'), bty = "n",
pch=15 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
normalizar <- function(val, min, max) (val - min) / (max - min)
normalizar_medias <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
media_geral <- sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
radar_plot <- function(colonia){
media_colonia <- data %>%
filter(colonias == colonia) %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia) %>% t() %>% as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=1, y=1.3, legend = c('geral', colonia), bty = "n",
pch=15 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
}
radar_plot('COL 2')
radar_plot('COL 3')
libary(tools)
library(tools)
normalizar <- function(val, min, max) (val - min) / (max - min)
normalizar_medias <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
media_geral <- sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
radar_plot <- function(colonia){
media_colonia <- data %>%
filter(colonias == colonia) %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia) %>% t() %>% as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=1, y=1.3, legend = c('geral', toTitleCase(colonia)), bty = "n",
pch=15 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
}
radar_plot('COL 1')
toTitleCase('COL 1')
tolower('COL 1')
library(stringr)
str_to_title('COL 1')
normalizar <- function(val, min, max) (val - min) / (max - min)
normalizar_medias <- sapply(data[,3:9], range) %>%
rbind(sapply(data[,3:9], function(x) ifelse(sd(x)/mean(x) < 1, mean(x), median(x)))) %>%
as.data.frame()
media_geral <- sapply(normalizar_medias, function(x) normalizar(x[3], x[1], x[2]))
radar_plot <- function(colonia){
media_colonia <- data %>%
filter(colonias == colonia) %>%
select(3:9) %>%
sapply(., function(x) {
normalizar(mean(x), min(x), max(x))
})
radar_plot <- data.frame(min=0, max=1, media_geral, media_colonia) %>% t() %>% as.data.frame()
# plot with default options:
radarchart( radar_plot  , axistype=1 ,
#custom polygon
pcol=colors_border , pfcol=colors_in , plwd=4 , plty=1,
#custom the grid
cglcol="grey", cglty=1, axislabcol="grey", caxislabels=seq(0,1,5), cglwd=0.8,
#custom labels
vlcex=0.8
)
legend(x=1, y=1.3, legend = c('geral', str_to_title(colonia)), bty = "n",
pch=15 , col=colors_in , text.col = "grey", cex=1.2, pt.cex=3)
}
library(shiny)
unique(data$colonias)
kruskal.test(n_potes_mel, colonias, data=data)
kruskal.test(data$n_potes_mel ~ data$colonias)
teste <- kruskal.test(data$n_potes_mel ~ data$colonias)
posthoc.kruskall.nemenyi.test(n_potes_mel ~ colonias | meses, data=data)
if(!require(multcompView)){install.packages("multcompView")}
if(!require(PMCMR)){install.packages("PMCMR")}
if(!require(rcompanion)){install.packages("rcompanion")}
posthoc.kruskall.nemenyi.test(n_potes_mel ~ colonias, data=data)
posthoc.kruskal.nemenyi.test(n_potes_mel ~ colonias, data=data)
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ colonias, data=data)
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ colonias, data=data)
pTable
pTableComplete = fullPTable(pTable$p.value)
r <- multcompLetters(pTableComplete)
r
data %>%
group_by(colonias) %>%
summarise(media=mean(n_potes_mel)) %>%
bind_cols(r$Letters)
data %>%
group_by(colonias) %>%
summarise(media=mean(n_potes_mel)) %>%
bind_cols(r$Letters)
data %>%
group_by(colonias) %>%
summarise(media=mean(n_potes_mel)) %>%
bind_cols(r$Letters) %>%
arrange(desc(media))
source('./00manipulando_dados.R')
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ estacoes, data=data)
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ estacao, data=data)
data$estacao
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ estacao, data=data)
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ as.factor(estacao), data=data)
pTableComplete = fullPTable(pTable$p.value)
r <- multcompLetters(pTableComplete)
data %>%
group_by(estacao) %>%
summarise(media=mean(n_potes_mel)) %>%
bind_cols(r$Letters) %>%
arrange(desc(media))
data %>%
group_by(estacao) %>%
summarise(media=mean(n_potes_mel)) %>%
bind_cols(r$Letters) %>%
arrange(desc(media))
data %>%
group_by(estacao) %>%
summarise(media=mean(n_potes_mel)) %>%
mutate( teste = r$Letters) %>%
arrange(desc(media))
data %>%
group_by(estacao) %>%
summarise(media=mean(n_potes_mel)) %>%
mutate(grupos = r$Letters) %>%
arrange(desc(media))
data$meses
pTable  = posthoc.kruskal.nemenyi.test(n_potes_mel ~ as.factor(meses), data=data)
pTableComplete = fullPTable(pTable$p.value)
r <- multcompLetters(pTableComplete)
data %>%
group_by(meses) %>%
summarise(media=mean(n_potes_mel)) %>%
mutate(grupos = r$Letters) %>%
arrange(desc(media))
source('./reading_data.R')
library(TeachingDemos) faces(combine[1:10, 4:8])
library(TeachingDemos)
faces(combine[1:10, 4:8])
combine$position
combine %>% filter(position == 'QB') %>% select(4:8) %>% faces()
combine %>% filter(position == 'QB') %>% select(4:8)
combine %>% filter(position == 'QB') %>% select(4:8) %>% faces()
